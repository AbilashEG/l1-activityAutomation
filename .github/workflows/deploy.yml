name: L1 Activity Automation CI/CD

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          set -e
          echo "🚀 Starting L1 Activity Automation Deployment..."
          
          # Update repository
          cd /home/ec2-user/l1-activity-automation
          git pull origin master
          
          # Backend setup (NO VIRTUAL ENVIRONMENT!)
          echo "🐍 Setting up Python backend..."
          cd backend
          
          # Install dependencies globally (matching your working setup)
          pip3 install -r requirements.txt --user --upgrade
          
          # Stop existing PM2 process
          pm2 stop l1-backend 2>/dev/null || true
          pm2 delete l1-backend 2>/dev/null || true
          
          # Start with Gunicorn (production mode)
          pm2 start "gunicorn --bind 0.0.0.0:5000 --workers 2 wsgi:app" --name l1-backend
          
          # Frontend setup  
          echo "⚛️ Setting up React frontend..."
          cd ../frontend
          npm ci --silent
          npm run build
          
          # Update frontend files
          sudo cp -r build/* /var/www/html/
          
          # Fix Nginx configuration (CRITICAL PROXY FIX)
          echo "🌐 Updating Nginx configuration..."
          sudo tee /etc/nginx/conf.d/l1-automation.conf > /dev/null <<'EOF'
          server {
              listen 80;
              server_name _;
              
              location / {
                  root /var/www/html;
                  index index.html;
                  try_files $uri $uri/ /index.html;
              }
              
              location /api/ {
                  proxy_pass http://127.0.0.1:5000/api/;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_redirect off;
              }
          }
          EOF
          
          # Restart Nginx
          sudo nginx -t && sudo systemctl restart nginx
          
          # Save PM2 configuration
          pm2 save
          
          # Health checks with retries
          echo "🧪 Running health checks..."
          sleep 5
          
          for i in {1..3}; do
            if curl -sf http://localhost:5000/api/health; then
              echo "✅ Backend healthy on attempt $i"
              break
            else
              echo "⚠️ Health check $i failed, retrying..."
              sleep 3
            fi
          done
          
          echo "✅ L1 Activity Automation deployed successfully!"
          echo "🌐 URL: http://$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)"
          pm2 status
